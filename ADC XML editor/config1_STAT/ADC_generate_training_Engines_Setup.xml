<?xml version="1.0" encoding="utf-8"?>
<root>
	<version>
		<number>3.5.3.7</number>
		<date>10-May-2018</date>
	</version>
	<config_folder_name>config1_STAT</config_folder_name>
	<product>STAT_STM_M5</product>
	<active_engines>chipping_corner;chipping_normal;corner_300_add</active_engines>
	<generate>
		<generate_data_in_addition_to_factors>1</generate_data_in_addition_to_factors>
	</generate>
	<evaluate>
		<re_generate_training_plots>0</re_generate_training_plots>
	</evaluate>
	<input_image_properties>
		<image>
			<image_type_name>color</image_type_name>
			<size_w>1000</size_w>
			<size_h>1036</size_h>
			<max_offset_from_center>0</max_offset_from_center>
		</image>
		<image>
			<image_type_name>color2</image_type_name>
			<size_w>1380</size_w>
			<size_h>1036</size_h>
			<max_offset_from_center>0</max_offset_from_center>
		</image>
	</input_image_properties>
	<process>
		<debug>0</debug>
	</process>
	<train>
		<training_percent>0.80</training_percent>
		<validation_percent>0.15</validation_percent>
		<n_epochs_with_no_improvment>35</n_epochs_with_no_improvment>
	</train>
	<engines>
		<engine>
			<number>2</number>
			<name>Near_pad</name>
			<images>
				<image>
					<image_type_name>color</image_type_name>
					<convert_to>color_to_bw</convert_to>
					<source_image_size_linked_to_minus_one>200</source_image_size_linked_to_minus_one>
					<roi_resize>1</roi_resize>
					<roi_size>224</roi_size>
					<translate_shift>12</translate_shift>
					<smooth_image>0</smooth_image>
				</image>
			</images>
			<generate>
				<max_factor>12</max_factor>
				<max_factor_exceeding_percentage>30</max_factor_exceeding_percentage>
				<unbalanced_allowed_ratio>1.5</unbalanced_allowed_ratio>
				<mode>balanced</mode>
				<max_classes_to_reduce>0</max_classes_to_reduce>
				<max_augmented_size>10000</max_augmented_size>
			</generate>
			<train>
				<model_trial>
					<engine_type>simple</engine_type>
					<name>batch0_0</name>
					<active>1</active>
					<batch_size>15</batch_size>
					<sub_engines>
						<sub_engine>
							<model_type>googlenet</model_type>
							<image_type_name>color</image_type_name>
							<n_fc_nodes></n_fc_nodes>
							<network_architecture></network_architecture>
							<batch_normalization>1</batch_normalization>
							<weight_init_method>gaussian</weight_init_method>
							<norm_method>mean_subtract</norm_method>
							<conv_type>2D</conv_type>
							<optimizer>Adam</optimizer>
							<learning_rate>ReduceLROnPlateau_lr0.001_factor0.1_patience25*60</learning_rate>
						</sub_engine>
					</sub_engines>
				</model_trial>
				<model_trial>
					<engine_type>simple</engine_type>
					<name>batch0_1</name>
					<active>1</active>
					<batch_size>15</batch_size>
					<sub_engines>
						<sub_engine>
							<model_type>resnet18</model_type>
							<image_type_name>color</image_type_name>
							<n_fc_nodes></n_fc_nodes>
							<network_architecture></network_architecture>
							<batch_normalization>1</batch_normalization>
							<weight_init_method>gaussian</weight_init_method>
							<norm_method>mean_subtract</norm_method>
							<conv_type>2D</conv_type>
							<optimizer>Adam</optimizer>
							<learning_rate>ReduceLROnPlateau_lr0.0001_factor0.1_patience25*60</learning_rate>
						</sub_engine>
					</sub_engines>
				</model_trial>
				<model_trial>
					<engine_type>simple</engine_type>
					<name>batch0_2</name>
					<active>1</active>
					<batch_size>15</batch_size>
					<sub_engines>
						<sub_engine>
							<model_type>googlenet</model_type>
							<image_type_name>color</image_type_name>
							<n_fc_nodes></n_fc_nodes>
							<network_architecture></network_architecture>
							<batch_normalization>1</batch_normalization>
							<weight_init_method>gaussian</weight_init_method>
							<norm_method>mean_subtract</norm_method>
							<conv_type>2D</conv_type>
							<optimizer>Adam</optimizer>
							<learning_rate>ReduceLROnPlateau_lr0.00005_factor0.1_patience25*60</learning_rate>
						</sub_engine>
					</sub_engines>
				</model_trial>
			</train>
			<evaluate>
				<model_trial>
					<name>batch5_1</name>
					<active>0</active>
					<epochs_to_evaluate></epochs_to_evaluate>
					<images_to_evaluate>C:\ADC\for_activation</images_to_evaluate>
				</model_trial>
			</evaluate>
			<classes>
				<class>
					<name>near_pad_defect</name>
					<primitive_class>pad_near_dust</primitive_class>
					<augmentation_types>s</augmentation_types>
				</class>
				<class>
					<name>no_defect</name>
					<primitive_class>pad_near_good</primitive_class>
					<augmentation_types>s</augmentation_types>
				</class>
			</classes>
		</engine>
		<engine>
			<number>3</number>
			<name>Chipping_zone</name>
			<images>
				<image>
					<image_type_name>color</image_type_name>
					<convert_to>no_conversion</convert_to>
					<source_image_size_linked_to_minus_one></source_image_size_linked_to_minus_one>
					<roi_resize>1</roi_resize>
					<roi_size>224</roi_size>
					<translate_shift>12</translate_shift>
					<smooth_image>0</smooth_image>
				</image>
			</images>
			<generate>
				<max_factor>12</max_factor>
				<max_factor_exceeding_percentage>30</max_factor_exceeding_percentage>
				<unbalanced_allowed_ratio>1.5</unbalanced_allowed_ratio>
				<mode>balanced</mode>
				<max_classes_to_reduce>0</max_classes_to_reduce>
				<max_augmented_size>10000</max_augmented_size>
			</generate>
			<train>
				<model_trial>
					<engine_type>simple</engine_type>
					<name>batch0_0</name>
					<active>1</active>
					<batch_size>35</batch_size>
					<sub_engines>
						<sub_engine>
							<model_type>googlenet</model_type>
							<image_type_name>color</image_type_name>
							<n_fc_nodes></n_fc_nodes>
							<network_architecture></network_architecture>
							<batch_normalization>1</batch_normalization>
							<weight_init_method>gaussian</weight_init_method>
							<norm_method>mean_subtract</norm_method>
							<conv_type>2D</conv_type>
							<optimizer>Adam</optimizer>
							<learning_rate>ReduceLROnPlateau_lr0.001_factor0.1_patience25*60</learning_rate>
						</sub_engine>
					</sub_engines>
				</model_trial>
				<model_trial>
					<engine_type>simple</engine_type>
					<name>batch0_1</name>
					<active>1</active>
					<batch_size>35</batch_size>
					<sub_engines>
						<sub_engine>
							<model_type>googlenet</model_type>
							<image_type_name>color</image_type_name>
							<n_fc_nodes></n_fc_nodes>
							<network_architecture></network_architecture>
							<batch_normalization>1</batch_normalization>
							<weight_init_method>gaussian</weight_init_method>
							<norm_method>mean_subtract</norm_method>
							<conv_type>2D</conv_type>
							<optimizer>Adam</optimizer>
							<learning_rate>ReduceLROnPlateau_lr0.001_factor0.1_patience25*60</learning_rate>
						</sub_engine>
					</sub_engines>
				</model_trial>
			</train>
			<evaluate>
				<model_trial>
					<name>batch5_1</name>
					<active>0</active>
					<epochs_to_evaluate></epochs_to_evaluate>
					<images_to_evaluate>C:\ADC\for_activation</images_to_evaluate>
				</model_trial>
			</evaluate>
			<classes>
				<class>
					<name>chipping_normal</name>
					<primitive_class>chipping_zone_chipping_defect;chipping_zone_chipping_no_defect;chipping_zone_dust;chipping_zone_touching_defect;chipping_zone_touching_no_defect</primitive_class>
					<augmentation_types>s;s;s;s;s</augmentation_types>
				</class>
				<class>
					<name>chipping_corner</name>
					<primitive_class>chipping_zone_corner_defect;chipping_zone_corner_no_defect</primitive_class>
					<augmentation_types>s;s</augmentation_types>
				</class>
			</classes>
		</engine>
		<engine>
			<number>4</number>
			<name>touching</name>
			<images>
				<image>
					<image_type_name>color</image_type_name>
					<convert_to>no_conversion</convert_to>
					<source_image_size_linked_to_minus_one>400</source_image_size_linked_to_minus_one>
					<roi_resize>1</roi_resize>
					<roi_size>224</roi_size>
					<translate_shift>12</translate_shift>
					<smooth_image>0</smooth_image>
				</image>
			</images>
			<generate>
				<max_factor>12</max_factor>
				<max_factor_exceeding_percentage>30</max_factor_exceeding_percentage>
				<unbalanced_allowed_ratio>1.5</unbalanced_allowed_ratio>
				<mode>balanced</mode>
				<max_classes_to_reduce>0</max_classes_to_reduce>
				<max_augmented_size>10000</max_augmented_size>
			</generate>
			<train>
				<model_trial>
					<engine_type>simple</engine_type>
					<name>batch0_0</name>
					<active>1</active>
					<batch_size>35</batch_size>
					<sub_engines>
						<sub_engine>
							<model_type>vgg16</model_type>
							<image_type_name>color</image_type_name>
							<n_fc_nodes></n_fc_nodes>
							<network_architecture></network_architecture>
							<batch_normalization>1</batch_normalization>
							<weight_init_method>gaussian</weight_init_method>
							<norm_method>mean_subtract</norm_method>
							<conv_type>2D</conv_type>
							<optimizer>Adam</optimizer>
							<learning_rate>ReduceLROnPlateau_lr0.001_factor0.1_patience25*60</learning_rate>
						</sub_engine>
					</sub_engines>
				</model_trial>
				<model_trial>
					<engine_type>simple</engine_type>
					<name>batch0_1</name>
					<active>1</active>
					<batch_size>35</batch_size>
					<sub_engines>
						<sub_engine>
							<model_type>googlenet</model_type>
							<image_type_name>color</image_type_name>
							<n_fc_nodes></n_fc_nodes>
							<network_architecture></network_architecture>
							<batch_normalization>1</batch_normalization>
							<weight_init_method>gaussian</weight_init_method>
							<norm_method>mean_subtract</norm_method>
							<conv_type>2D</conv_type>
							<optimizer>Adam</optimizer>
							<learning_rate>ReduceLROnPlateau_lr0.0001_factor0.1_patience25*60</learning_rate>
						</sub_engine>
					</sub_engines>
				</model_trial>
			</train>
			<evaluate>
				<model_trial>
					<name>batch5_1</name>
					<active>0</active>
					<epochs_to_evaluate></epochs_to_evaluate>
					<images_to_evaluate>C:\ADC\for_activation</images_to_evaluate>
				</model_trial>
			</evaluate>
			<classes>
				<class>
					<name>no_defect</name>
					<primitive_class>chipping_zone_touching_no_defect</primitive_class>
					<augmentation_types>s</augmentation_types>
				</class>
				<class>
					<name>chipping</name>
					<primitive_class>chipping_zone_touching_defect;</primitive_class>
					<augmentation_types>s</augmentation_types>
				</class>
			</classes>
		</engine>
		<engine>
			<number>5</number>
			<name>corner_300_add</name>
			<images>
				<image>
					<image_type_name>color</image_type_name>
					<convert_to>no_conversion</convert_to>
					<source_image_size_linked_to_minus_one>300</source_image_size_linked_to_minus_one>
					<roi_resize>-1</roi_resize>
					<roi_size>224</roi_size>
					<translate_shift>12</translate_shift>
					<smooth_image>0</smooth_image>
				</image>
			</images>
			<generate>
				<max_factor>12</max_factor>
				<max_factor_exceeding_percentage>30</max_factor_exceeding_percentage>
				<unbalanced_allowed_ratio>1.5</unbalanced_allowed_ratio>
				<mode>balanced</mode>
				<max_classes_to_reduce>0</max_classes_to_reduce>
				<max_augmented_size>10000</max_augmented_size>
			</generate>
			<train>
				<model_trial>
					<engine_type>simple</engine_type>
					<name>batch0_0</name>
					<active>1</active>
					<batch_size>50</batch_size>
					<sub_engines>
						<sub_engine>
							<model_type>googlenet</model_type>
							<image_type_name>color</image_type_name>
							<n_fc_nodes></n_fc_nodes>
							<network_architecture></network_architecture>
							<batch_normalization>1</batch_normalization>
							<weight_init_method>gaussian</weight_init_method>
							<norm_method>mean_subtract</norm_method>
							<conv_type>2D</conv_type>
							<optimizer>Adam</optimizer>
							<learning_rate>ReduceLROnPlateau_lr0.001_factor0.1_patience25*60</learning_rate>
						</sub_engine>
					</sub_engines>
				</model_trial>
				<model_trial>
					<engine_type>simple</engine_type>
					<name>batch0_1</name>
					<active>1</active>
					<batch_size>50</batch_size>
					<sub_engines>
						<sub_engine>
							<model_type>googlenet</model_type>
							<image_type_name>color</image_type_name>
							<n_fc_nodes></n_fc_nodes>
							<network_architecture></network_architecture>
							<batch_normalization>1</batch_normalization>
							<weight_init_method>gaussian</weight_init_method>
							<norm_method>mean_subtract</norm_method>
							<conv_type>2D</conv_type>
							<optimizer>Adam</optimizer>
							<learning_rate>ReduceLROnPlateau_lr0.0001_factor0.1_patience25*60</learning_rate>
						</sub_engine>
					</sub_engines>
				</model_trial>
			</train>
			<evaluate>
				<model_trial>
					<name>batch5_1</name>
					<active>0</active>
					<epochs_to_evaluate></epochs_to_evaluate>
					<images_to_evaluate>C:\ADC\for_activation</images_to_evaluate>
				</model_trial>
			</evaluate>
			<classes>
				<class>
					<name>no_defect</name>
					<primitive_class>chipping_zone_corner_no_defect;chipping_zone_chipping_no_defect</primitive_class>
					<augmentation_types>s;s</augmentation_types>
				</class>
				<class>
					<name>chipping</name>
					<primitive_class>chipping_zone_corner_defect;</primitive_class>
					<augmentation_types>s</augmentation_types>
				</class>
			</classes>
		</engine>
		<engine>
			<number>6</number>
			<name>Pads</name>
			<images>
				<image>
					<image_type_name>color</image_type_name>
					<convert_to>no_conversion</convert_to>
					<source_image_size_linked_to_minus_one>500</source_image_size_linked_to_minus_one>
					<roi_resize>-1</roi_resize>
					<roi_size>224</roi_size>
					<translate_shift>12</translate_shift>
					<smooth_image>0</smooth_image>
				</image>
			</images>
			<generate>
				<max_factor>12</max_factor>
				<max_factor_exceeding_percentage>30</max_factor_exceeding_percentage>
				<unbalanced_allowed_ratio>1.5</unbalanced_allowed_ratio>
				<mode>balanced</mode>
				<max_classes_to_reduce>0</max_classes_to_reduce>
				<max_augmented_size>10000</max_augmented_size>
			</generate>
			<train>
				<model_trial>
					<engine_type>simple</engine_type>
					<name>batch0_0</name>
					<active>1</active>
					<batch_size>35</batch_size>
					<sub_engines>
						<sub_engine>
							<model_type>googlenet</model_type>
							<image_type_name>color</image_type_name>
							<n_fc_nodes></n_fc_nodes>
							<network_architecture></network_architecture>
							<batch_normalization>1</batch_normalization>
							<weight_init_method>gaussian</weight_init_method>
							<norm_method>mean_subtract</norm_method>
							<conv_type>2D</conv_type>
							<optimizer>Adam</optimizer>
							<learning_rate>ReduceLROnPlateau_lr0.001_factor0.1_patience25*60</learning_rate>
						</sub_engine>
					</sub_engines>
				</model_trial>
				<model_trial>
					<engine_type>simple</engine_type>
					<name>batch0_1</name>
					<active>1</active>
					<batch_size>35</batch_size>
					<sub_engines>
						<sub_engine>
							<model_type>googlenet</model_type>
							<image_type_name>color</image_type_name>
							<n_fc_nodes></n_fc_nodes>
							<network_architecture></network_architecture>
							<batch_normalization>1</batch_normalization>
							<weight_init_method>gaussian</weight_init_method>
							<norm_method>mean_subtract</norm_method>
							<conv_type>2D</conv_type>
							<optimizer>Adam</optimizer>
							<learning_rate>ReduceLROnPlateau_lr0.0001_factor0.1_patience25*60</learning_rate>
						</sub_engine>
					</sub_engines>
				</model_trial>
			</train>
			<evaluate>
				<model_trial>
					<name>batch5_1</name>
					<active>0</active>
					<epochs_to_evaluate></epochs_to_evaluate>
					<images_to_evaluate>C:\ADC\for_activation</images_to_evaluate>
				</model_trial>
			</evaluate>
			<classes>
				<class>
					<name>pad</name>
					<primitive_class>pad_defect</primitive_class>
					<augmentation_types>s</augmentation_types>
				</class>
				<class>
					<name>no_defect</name>
					<primitive_class>pad_good</primitive_class>
					<augmentation_types>s</augmentation_types>
				</class>
			</classes>
		</engine>
		<engine>
			<number>7</number>
			<name>Non_CIS</name>
			<images>
				<image>
					<image_type_name>color</image_type_name>
					<convert_to>no_conversion</convert_to>
					<source_image_size_linked_to_minus_one>500</source_image_size_linked_to_minus_one>
					<roi_resize>-1</roi_resize>
					<roi_size>224</roi_size>
					<translate_shift>12</translate_shift>
					<smooth_image>0</smooth_image>
				</image>
			</images>
			<generate>
				<max_factor>12</max_factor>
				<max_factor_exceeding_percentage>30</max_factor_exceeding_percentage>
				<unbalanced_allowed_ratio>1.5</unbalanced_allowed_ratio>
				<mode>balanced</mode>
				<max_classes_to_reduce>0</max_classes_to_reduce>
				<max_augmented_size>10000</max_augmented_size>
			</generate>
			<train>
				<model_trial>
					<engine_type>simple</engine_type>
					<name>batch0_0</name>
					<active>1</active>
					<batch_size>35</batch_size>
					<sub_engines>
						<sub_engine>
							<model_type>googlenet</model_type>
							<image_type_name>color</image_type_name>
							<n_fc_nodes></n_fc_nodes>
							<network_architecture></network_architecture>
							<batch_normalization>1</batch_normalization>
							<weight_init_method>gaussian</weight_init_method>
							<norm_method>mean_subtract</norm_method>
							<conv_type>2D</conv_type>
							<optimizer>Adam</optimizer>
							<learning_rate>ReduceLROnPlateau_lr0.001_factor0.1_patience25*60</learning_rate>
						</sub_engine>
					</sub_engines>
				</model_trial>
				<model_trial>
					<engine_type>simple</engine_type>
					<name>batch0_1</name>
					<active>1</active>
					<batch_size>35</batch_size>
					<sub_engines>
						<sub_engine>
							<model_type>googlenet</model_type>
							<image_type_name>color</image_type_name>
							<n_fc_nodes></n_fc_nodes>
							<network_architecture></network_architecture>
							<batch_normalization>1</batch_normalization>
							<weight_init_method>gaussian</weight_init_method>
							<norm_method>mean_subtract</norm_method>
							<conv_type>2D</conv_type>
							<optimizer>Adam</optimizer>
							<learning_rate>ReduceLROnPlateau_lr0.0001_factor0.1_patience25*60</learning_rate>
						</sub_engine>
					</sub_engines>
				</model_trial>
			</train>
			<evaluate>
				<model_trial>
					<name>batch5_1</name>
					<active>0</active>
					<epochs_to_evaluate></epochs_to_evaluate>
					<images_to_evaluate>C:\ADC\for_activation</images_to_evaluate>
				</model_trial>
			</evaluate>
			<classes>
				<class>
					<name>discoloration</name>
					<primitive_class>non_cis_discoloration</primitive_class>
					<augmentation_types>s</augmentation_types>
				</class>
				<class>
					<name>dust</name>
					<primitive_class>non_cis_dust</primitive_class>
					<augmentation_types>s</augmentation_types>
				</class>
				<class>
					<name>metal</name>
					<primitive_class>non_cis_metal</primitive_class>
					<augmentation_types>s</augmentation_types>
				</class>
				<class>
					<name>scratch</name>
					<primitive_class>non_cis_scratch</primitive_class>
					<augmentation_types>s</augmentation_types>
				</class>
				<class>
					<name>non_cis_good</name>
					<primitive_class>non_cis_good</primitive_class>
					<augmentation_types>s</augmentation_types>
				</class>
			</classes>
		</engine>
		<engine>
			<number>8</number>
			<name>CIS</name>
			<images>
				<image>
					<image_type_name>color</image_type_name>
					<convert_to>no_conversion</convert_to>
					<source_image_size_linked_to_minus_one>500</source_image_size_linked_to_minus_one>
					<roi_resize>-1</roi_resize>
					<roi_size>224</roi_size>
					<translate_shift>12</translate_shift>
					<smooth_image>0</smooth_image>
				</image>
			</images>
			<generate>
				<max_factor>12</max_factor>
				<max_factor_exceeding_percentage>30</max_factor_exceeding_percentage>
				<unbalanced_allowed_ratio>1.5</unbalanced_allowed_ratio>
				<mode>balanced</mode>
				<max_classes_to_reduce>0</max_classes_to_reduce>
				<max_augmented_size>10000</max_augmented_size>
			</generate>
			<train>
				<model_trial>
					<engine_type>simple</engine_type>
					<name>batch0_0</name>
					<active>1</active>
					<batch_size>35</batch_size>
					<sub_engines>
						<sub_engine>
							<model_type>googlenet</model_type>
							<image_type_name>color</image_type_name>
							<n_fc_nodes></n_fc_nodes>
							<network_architecture></network_architecture>
							<batch_normalization>1</batch_normalization>
							<weight_init_method>gaussian</weight_init_method>
							<norm_method>mean_subtract</norm_method>
							<conv_type>2D</conv_type>
							<optimizer>Adam</optimizer>
							<learning_rate>ReduceLROnPlateau_lr0.001_factor0.1_patience25*60</learning_rate>
						</sub_engine>
					</sub_engines>
				</model_trial>
				<model_trial>
					<engine_type>simple</engine_type>
					<name>batch0_1</name>
					<active>1</active>
					<batch_size>35</batch_size>
					<sub_engines>
						<sub_engine>
							<model_type>googlenet</model_type>
							<image_type_name>color</image_type_name>
							<n_fc_nodes></n_fc_nodes>
							<network_architecture></network_architecture>
							<batch_normalization>1</batch_normalization>
							<weight_init_method>gaussian</weight_init_method>
							<norm_method>mean_subtract</norm_method>
							<conv_type>2D</conv_type>
							<optimizer>Adam</optimizer>
							<learning_rate>ReduceLROnPlateau_lr0.0001_factor0.1_patience25*60</learning_rate>
						</sub_engine>
					</sub_engines>
				</model_trial>
			</train>
			<evaluate>
				<model_trial>
					<name>batch5_1</name>
					<active>0</active>
					<epochs_to_evaluate></epochs_to_evaluate>
					<images_to_evaluate>C:\ADC\for_activation</images_to_evaluate>
				</model_trial>
			</evaluate>
			<classes>
				<class>
					<name>cis_discoloration</name>
					<primitive_class>cis_discoloration</primitive_class>
					<augmentation_types>s</augmentation_types>
				</class>
				<class>
					<name>cis_big</name>
					<primitive_class>cis_big</primitive_class>
					<augmentation_types>s</augmentation_types>
				</class>
				<class>
					<name>cis_small</name>
					<primitive_class>cis_small</primitive_class>
					<augmentation_types>s</augmentation_types>
				</class>
				<class>
					<name>cis_scratch</name>
					<primitive_class>cis_scratch</primitive_class>
					<augmentation_types>s</augmentation_types>
				</class>
				<class>
					<name>cis_good</name>
					<primitive_class>cis_no_defect</primitive_class>
					<augmentation_types>s</augmentation_types>
				</class>
			</classes>
		</engine>
		<engine>
			<number>9</number>
			<name>chpping_normal</name>
			<images>
				<image>
					<image_type_name>color</image_type_name>
					<convert_to>no_conversion</convert_to>
					<source_image_size_linked_to_minus_one>500</source_image_size_linked_to_minus_one>
					<roi_resize>-1</roi_resize>
					<roi_size>224</roi_size>
					<translate_shift>12</translate_shift>
					<smooth_image>0</smooth_image>
				</image>
			</images>
			<generate>
				<max_factor>12</max_factor>
				<max_factor_exceeding_percentage>30</max_factor_exceeding_percentage>
				<unbalanced_allowed_ratio>1.5</unbalanced_allowed_ratio>
				<mode>balanced</mode>
				<max_classes_to_reduce>0</max_classes_to_reduce>
				<max_augmented_size>10000</max_augmented_size>
			</generate>
			<train>
				<model_trial>
					<engine_type>simple</engine_type>
					<name>batch0_0</name>
					<active>1</active>
					<batch_size>35</batch_size>
					<sub_engines>
						<sub_engine>
							<model_type>googlenet</model_type>
							<image_type_name>color</image_type_name>
							<n_fc_nodes></n_fc_nodes>
							<network_architecture></network_architecture>
							<batch_normalization>1</batch_normalization>
							<weight_init_method>gaussian</weight_init_method>
							<norm_method>mean_subtract</norm_method>
							<conv_type>2D</conv_type>
							<optimizer>Adam</optimizer>
							<learning_rate>ReduceLROnPlateau_lr0.001_factor0.1_patience25*60</learning_rate>
						</sub_engine>
					</sub_engines>
				</model_trial>
				<model_trial>
					<engine_type>simple</engine_type>
					<name>batch0_1</name>
					<active>1</active>
					<batch_size>35</batch_size>
					<sub_engines>
						<sub_engine>
							<model_type>googlenet</model_type>
							<image_type_name>color</image_type_name>
							<n_fc_nodes></n_fc_nodes>
							<network_architecture></network_architecture>
							<batch_normalization>1</batch_normalization>
							<weight_init_method>gaussian</weight_init_method>
							<norm_method>mean_subtract</norm_method>
							<conv_type>2D</conv_type>
							<optimizer>Adam</optimizer>
							<learning_rate>ReduceLROnPlateau_lr0.0001_factor0.1_patience25*60</learning_rate>
						</sub_engine>
					</sub_engines>
				</model_trial>
			</train>
			<evaluate>
				<model_trial>
					<name>batch5_1</name>
					<active>0</active>
					<epochs_to_evaluate></epochs_to_evaluate>
					<images_to_evaluate>C:\ADC\for_activation</images_to_evaluate>
				</model_trial>
			</evaluate>
			<classes>
				<class>
					<name>no_defect</name>
					<primitive_class>chipping_zone_chipping_no_defect</primitive_class>
					<augmentation_types>s</augmentation_types>
				</class>
				<class>
					<name>chipping</name>
					<primitive_class>chipping_zone_chipping_defect;</primitive_class>
					<augmentation_types>s</augmentation_types>
				</class>
			</classes>
		</engine>
	</engines>
</root>